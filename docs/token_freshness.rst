Token Freshness
===============

We have the idea of token freshness built into this extension. In a nutshell,
you can choose to mark some access tokens as fresh and others as non-fresh, and
use the **fresh_jwt_required** decorator to only allow fresh tokens to access some
endpoints.

This is useful for allowing fresh tokens to do some critical things (maybe
change a password, or complete an online purchase), but to deny those features
to non-fresh tokens (until they re-authenticate and get a new fresh token).
Fresh tokens can lead to a more secure site, without creating a bad users
experience by making users re-authenticate all the time.

The provided API gives you the power to create and use fresh tokens however you
want. A very natural way to utilize them is to mark a token as fresh when
someone first logs in, and mark tokens generated by a refresh token as not
fresh.

.. literalinclude:: ../examples/token_freshness.py

